package com.football.ipl;

import android.app.PendingIntent;
import android.app.RemoteInput;
import android.content.Context;
import android.content.Intent;
import android.os.Bundle;
import android.os.Parcel;
import android.os.Parcelable;
import android.util.Log;
import androidx.core.app.NotificationCompat;
import androidx.core.app.RemoteInput;
import java.util.ArrayList;
import java.util.Iterator;

public class Action implements Parcelable {
    public static final Parcelable.Creator CREATOR = new Parcelable.Creator() {
        public Action createFromParcel(Parcel parcel) {
            return new Action(parcel);
        }

        public Action[] newArray(int i) {
            return new Action[i];
        }
    };
    private final boolean isQuickReply;

    /* renamed from: p */
    private final PendingIntent f32p;
    private final String packageName;
    private final ArrayList<RemoteInputParcel> remoteInputs = new ArrayList<>();
    private final String text;

    public int describeContents() {
        return 0;
    }

    public Action(Parcel parcel) {
        this.text = parcel.readString();
        this.packageName = parcel.readString();
        this.f32p = (PendingIntent) parcel.readParcelable(PendingIntent.class.getClassLoader());
        this.isQuickReply = parcel.readByte() != 0;
        parcel.readTypedList(this.remoteInputs, RemoteInputParcel.CREATOR);
    }

    public void writeToParcel(Parcel parcel, int i) {
        parcel.writeString(this.text);
        parcel.writeString(this.packageName);
        parcel.writeParcelable(this.f32p, i);
        parcel.writeByte(this.isQuickReply ? (byte) 1 : 0);
        parcel.writeTypedList(this.remoteInputs);
    }

    public Action(NotificationCompat.Action action, String str, boolean z) {
        this.text = action.title.toString();
        this.packageName = str;
        this.f32p = action.actionIntent;
        if (action.getRemoteInputs() != null) {
            for (RemoteInput remoteInputParcel : action.getRemoteInputs()) {
                this.remoteInputs.add(new RemoteInputParcel(remoteInputParcel));
            }
        }
        this.isQuickReply = z;
    }

    public void sendReply(Context context, String str) throws PendingIntent.CanceledException {
        Log.i("Vi**u", "inside sendReply");
        Intent intent = new Intent();
        Bundle bundle = new Bundle();
        ArrayList arrayList = new ArrayList();
        Iterator<RemoteInputParcel> it = this.remoteInputs.iterator();
        while (it.hasNext()) {
            RemoteInputParcel next = it.next();
            Log.i(BuildConfig.FLAVOR, "RemoteInput: " + next.getLabel());
            bundle.putCharSequence(next.getResultKey(), str);
            RemoteInput.Builder builder = new RemoteInput.Builder(next.getResultKey());
            builder.setLabel(next.getLabel());
            builder.setChoices(next.getChoices());
            builder.setAllowFreeFormInput(next.isAllowFreeFormInput());
            builder.addExtras(next.getExtras());
            arrayList.add(builder.build());
        }
        android.app.RemoteInput.addResultsToIntent((android.app.RemoteInput[]) arrayList.toArray(new android.app.RemoteInput[arrayList.size()]), intent, bundle);
        this.f32p.send(context, 0, intent);
    }
}
